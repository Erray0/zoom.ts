$zoom-background-color: hsl(0, 0%, 100%) !default;
$zoom-transition-duration: 400ms !default;
$zoom-media-z-index: 2000 !default;
$zoom-overlay-z-index: 1000 !default;
$overlay-opacity: 100;

@mixin transition($property, $duration) {
  transition: $property $duration;
  -o-transition: $property $duration;
  -moz-transition: $property $duration;
  -webkit-transition: $property $duration;
}

[data-zoom='zoom-in'] {
  cursor: pointer;
  cursor: -moz-zoom-in;
  cursor: -webkit-zoom-in;
}

[data-zoom='zoom-out'] {
  transform: translateZ(0);
  cursor: pointer;
  cursor: -moz-zoom-out;
  cursor: -webkit-zoom-out;

  // force hardware acceleration
  filter: none;
  filter: progid:DXImageTransform.Microsoft.Blur(PixelRadius='0');
  -webkit-filter: blur(0);
  -moz-filter: blur(0);
  -ms-filter: blur(0);
  backface-visibility: hidden;
}

// Ensure the wrap and the zoomed element appear above the overlay
[data-zoom='zoom-out'],
.zoom-wrap {
  @include transition(transform, $zoom-transition-duration);

  position: relative;
  z-index: $zoom-media-z-index;

  // improve animation in Chrome
  will-change: transform;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

// An overlay that fills the entire viewport with a background colour and disables click events below it
.zoom-overlay {
  @include transition(opacity, $zoom-transition-duration);

  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  opacity: 0;

  z-index: $zoom-overlay-z-index;
  background: $zoom-background-color;
  pointer-events: none;
  filter: 'alpha(opacity=0)';
}

.zoom-overlay-open {
  .zoom-overlay {
    opacity: $overlay-opacity / 100;
    filter: 'alpha(opacity=' + $overlay-opacity + ')';
  }

  // Once loaded & transitioned, enable pixelated image rendering to improve image sharpness
  &:not(.zoom-overlay-loading):not(.zoom-overlay-transitioning) {
    image-rendering: pixelated;
  }
}

// Disable text selection during the loading, transitioning, or open phases
.zoom-overlay-loading,
.zoom-overlay-transitioning,
.zoom-overlay-open {
  user-select: none;
  -ms-user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
}

// Show a waiting cursor during the loading phase
.zoom-overlay-loading {
  cursor: wait;

  [data-zoom='zoom-in'], [data-zoom='zoom-out'] {
    cursor: wait;
  }
}

// During an opening transition, or once opened: enable pointer events only on the media to zoom out
.zoom-overlay-transitioning .zoom-overlay-open,
.zoom-overlay-open {
  pointer-events: none;

  [data-zoom='zoom-out'] {
    pointer-events: auto;
  }
}

// During a closing transition: enable pointer events only on the media to zoom out
.zoom-overlay-transitioning:not(.zoom-overlay-open) {
  pointer-events: none;

  [data-zoom='zoom-out'] {
    pointer-events: auto;
  }
}
